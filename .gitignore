#ignoring .vscode folder but we keep some files for debuging
/.vscode/chrome
/.vs/

package-lock.json
.DS_Store

# Code Coverage Folder
coverage/

#Node Modules
/node_modules

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
env/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*,cover
.hypothesis/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# IPython Notebook
.ipynb_checkpoints

# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule

# dotenv
.env

# virtualenv
venv/
ENV/

# Spyder project settings
.spyderproject

# Rope project settings
.ropeproject
.DS_Store
src/play_around_pymongo/.idea/misc.xml
src/play_around_pymongo/.idea/modules.xml
src/play_around_pymongo/.idea/play_around_pymongo.iml
src/play_around_pymongo/.idea/dictionaries/screencaster.xml
src/play_around_pymongo/.idea/inspectionProfiles/profiles_settings.xml
src/05_pymongo/play_around_pymongo/.idea/misc.xml
src/05_pymongo/play_around_pymongo/.idea/modules.xml
src/05_pymongo/play_around_pymongo/.idea/play_around_pymongo.iml
src/05_pymongo/play_around_pymongo/.idea/dictionaries/screencaster.xml
src/05_pymongo/play_around_pymongo/.idea/inspectionProfiles/profiles_settings.xml
src/07_mongoengine/service_central_starter/.idea/misc.xml
src/07_mongoengine/service_central_starter/.idea/modules.xml
src/07_mongoengine/service_central_starter/.idea/service_central_starter.iml
src/07_mongoengine/service_central_starter/.idea/inspectionProfiles/profiles_settings.xml
src/07_mongoengine/service_central/.idea/misc.xml
src/07_mongoengine/service_central/.idea/modules.xml
src/07_mongoengine/service_central/.idea/service_central.iml
src/07_mongoengine/service_central/.idea/inspectionProfiles/profiles_settings.xml
screencaster.xml
.idea

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
/node_modules
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]

# C extensions
*.so

# Distribution / packaging
bin/
build/
develop-eggs/
dist/
eggs/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
.tox/
.coverage
.cache
nosetests.xml
coverage.xml

# Translations
*.mo

# Mr Developer
.mr.developer.cfg
.project
.pydevproject

# Rope
.ropeproject

# Django stuff:
*.log
*.pot

# Sphinx documentation
docs/_build/

/build
/src/mongo/db/modules
/.jsdbshell
/.cache
/.dbshell
/*.ninja
/*.ninja.*
/.ninja_deps
/.ninja_log
/perf.data
/perf.data.old
/massif.out.*
venv

*~
*.test_iwyu.h
*.test_iwyu.cpp
*.swp
*.o
*.os
*.obj
*.aps
*.ilk
*.tar.gz
*.suo
*.ncb
*.idb
*.obj
*.opt
*.pch
*.jsh
*.jsall
*.pyc
*.log
*.exe
*.exp
*.lib
*.idb
*.pdb
*.manifest
*.user
*.gch
*.*sdf
*.psess
*.tmp
*.eslintcache
*#
.#*
iwyu.dat

/src/mongo/*/*Debug*/
/src/mongo/*/*/*Debug*/
/src/mongo/*/*Release*/
/src/mongo/*/*/*Release*/
/src/ipch
/src/mongo/*/ipch
/src/mongo/*/*/ipch
/src/mongo/db/.gdb*
/src/mongo/db/makefile.local
/src/mongo/db/_ReSharper.db
/src/third_party/*/*.cache
/src/third_party/*/*.tlog
/src/third_party/*/*.lastbuildstate
/buildscripts/libdeps/graph_visualizer_web_stack/build
/buildscripts/libdeps/graph_visualizer_web_stack/node_modules
buildscripts/iwyu/test/*/test_run
libdeps.graphml
build-metrics.json
config.log
settings.py
log_config.py
/tags
TAGS

# temp dirs
dump
/log
logs
docs/html
docs/latex
docs/doxygen
32bit
scratch
/multiversion_binaries

# binaries
/docgen*
/loadgen*
/mongoed*
/mongogrid*
/mongoperf*
/mongoshim*
/mongosniff*
/mongotrafficreader*

# binaries from db-contrib-tool
/ksdecode*
/mongo*
/mongoauditdecrypt*
/mongobridge*
/mongocryptd*
/mongod*
/mongodecrypt*
/mongokerberos*
/mongoldap*
/mongoqd*
/mongos*
/mongotmock*
/mqlrun*
/wt*

*.tgz
*.zip
*.tar.gz

#libs
/libmongoclient.*
/libmongotestfiles.*
/libmongoshellfiles.*
/sharedclient
/genny

/emr.jar
*.class

# examples
/firstExample
/secondExample
/whereExample
/bsondemo
/rsExample
/tutorial

#tests
/dbtest
/authTest
/perftest
/clientTest
/httpClientTest
/genny_results

# benchrun files
/benchrun_embedded

# Linters
.mypy_cache

#debian
build-stamp
configure-stamp
debian/mongodb

# OSX files
.DS_Store
._.DS_Store
*.fuse_*

# QtCreator
*.config
*.creator
*.creator.user
*.files
*.includes
*.orig

# Eclipse build artifacts
.cproject
.project
.pydevproject
.externalToolBuilders/
.settings/

# Idea CLion project artifacts
.idea
!src/third_party/abseil-cpp/**/CMakeLists.txt

# XCode projects
.xcworkspace

# VSCode projects
.vscode/**
!.vscode/linux-virtual-workstation.code-workspace

# Visual Studio projects
.vs/
/x64/

# Windows MSI builder artifacts
*.msi
*.wixobj
*.wixpdb
DriverInclude.wxs

# Gradle
.gradle
src/mongo/embedded/java/build/
src/mongo/embedded/java/aar/build/
src/mongo/embedded/java/jar/build/
local.properties

# clangd language server
.clangd/

compile_commands.json
generated_resmoke_config
selected_tests_config

# Code review tool config
codereview.rc

# Python venvs and virtualenvs
python3-venv
python2-venv

# Generated resmoke configuration file
resmoke.ini

# UndoDB Recordings
*.undo

# Resmoke runtime configuration and trackers.
.resmoke_start_time.yml
.resmoke_mongo_version.yml
.resmoke_mongo_release_values.yml

# libfuzzer artifacts
default.profraw
/corpora
/corpora-merged

# Linter and formatter cache
.mypy_cache/

# RPM build temps
/distsrc.tar
/selinux/tmp
/dst
/rpmbuild
/repo
/rpm/tmp

# generated by gen_all_feature_flag_list.py
all_feature_flags.txt

# generated by clang-tidy buildscripts
clang_tidy_fixes
.clang-tidy

#SCons runtime configuration
scons_env.env

# buildscripts_test by-product
test_success.ninja

# test report generation result
report.json

# suggested resmoke binary location
dist-test/

# node extra stuff (for someone installing eslint)
node_modules/
package-lock.json

# jstestfuzz generated test directory
jstestfuzz/

# Bazel-related work
# (Note that each string does NOT terminate with a '/' so that gitignore works properly)
bazel-bin
bazel-mongo*
bazel-out
bazel-testlogs
bazelisk

# generated configs for external fixture suites
docker_compose/

# artifacts from antithesis docker base image builds
antithesis-dist-test
buildscripts/antithesis/base_images/mongo_binaries/dist-test
buildscripts/antithesis/base_images/mongo_binaries/libvoidstar.so

buildscripts/antithesis/base_images/workload/src
buildscripts/antithesis/base_images/workload/mongo
buildscripts/antithesis/base_images/workload/jstestfuzz
buildscripts/antithesis/base_images/workload/QA
buildscripts/antithesis/base_images/workload/libvoidstar.so

# default download location for resmoke core-analyzer
core-analyzer

# robot-ros
devel/
logs/
build/
bin/
lib/
msg_gen/
srv_gen/
msg/*Action.msg
msg/*ActionFeedback.msg
msg/*ActionGoal.msg
msg/*ActionResult.msg
msg/*Feedback.msg
msg/*Goal.msg
msg/*Result.msg
msg/_*.py
build_isolated/
devel_isolated/

# Generated by dynamic reconfigure
*.cfgc
/cfg/cpp/
/cfg/*.py

# Ignore generated docs
*.dox
*.wikidoc

# eclipse stuff
.project
.cproject

# qcreator stuff
CMakeLists.txt.user

srv/_*.py
*.pcd
*.pyc
qtcreator-*
*.user

/planning/cfg
/planning/docs
/planning/src

*~

# Emacs
.#*

# Catkin custom files
CATKIN_IGNORE
